package com.example.iotapp;

import android.os.Bundle;
import android.util.Log;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import org.eclipse.paho.client.mqttv3.MqttClient;
import org.json.JSONException;
import org.json.JSONObject;


public class RemoteProjectorActivity extends AppCompatActivity {
    String BROKER_URL = Constant.MQTTURL + ":1883";

    //Client ID generated by paho library
    String CLIENT_ID = MqttClient.generateClientId();
    private MqttHandler mqttHandler;

    private ImageView btnIO,btnOff,btn1,btn2,btn3,btn4,btn5,btn6,btn7,btn8,btn9,btn0;
    private ImageView btnRed,btnGreen,btnYellow,btnBlue,btnBack,btnMenu;
    private ImageView btnVolUp,btnVolDown,btnChUp,btnChDown, btnInfo;
    private ImageView btnUp,btnDown,btnLeft,btnRight;
    private TextView btnOK,btnGuide,btnExit;
    private String topic = "esp32/output_server";
    private JSONObject irJsonObject = new JSONObject();
    private String ir_codes = "";
    private String MAC = "";
    private String message = "";
    private String ir_code = "";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        getWindow().setFlags(
                WindowManager.LayoutParams.FLAG_FULLSCREEN,
                WindowManager.LayoutParams.FLAG_FULLSCREEN
        );
        setContentView(R.layout.layout_projector_remote);
        ir_codes = getIntent().getStringExtra("ir_codes");
        try {
            irJsonObject = new JSONObject(ir_codes);
        } catch (Exception e) {
            e.printStackTrace();
        }
        MAC = getIntent().getStringExtra("MAC");
        //Log the irJsonObject
        Log.d("IRJSON",irJsonObject.toString());
        Log.d("MAC",MAC);
        //vibrator = (Vibrator) getSystemService(VIBRATOR_SERVICE);
        initButton();
        init();
        initButtonAction();
    }

    private void initButton()
    {
        btnIO = findViewById(R.id.btnIO);
        btnOff = findViewById(R.id.btnOff);
        btn1 = findViewById(R.id.btn1);
        btn2 = findViewById(R.id.btn2);
        btn3 = findViewById(R.id.btn3);
        btn4 = findViewById(R.id.btn4);
        btn5= findViewById(R.id.btn5);
        btn6= findViewById(R.id.btn6);
        btn7= findViewById(R.id.btn7);
        btn8= findViewById(R.id.btn8);
        btn9= findViewById(R.id.btn9);
        btn0= findViewById(R.id.btn0);
        btnRed= findViewById(R.id.btnRed);
        btnGreen= findViewById(R.id.btnGreen);
        btnYellow= findViewById(R.id.btnYellow);
        btnBlue= findViewById(R.id.btnBlue);
        btnGuide= findViewById(R.id.btnGuide);
        btnExit= findViewById(R.id.btnExit);
        btnBack= findViewById(R.id.btnBack);
        btnMenu= findViewById(R.id.btnMenu);
        btnVolUp= findViewById(R.id.btnVolUp);
        btnVolDown= findViewById(R.id.btnVolDown);
        btnChUp= findViewById(R.id.btnChUp);
        btnChDown= findViewById(R.id.btnChDown);
        btnInfo= findViewById(R.id.btnInfo);
        btnUp= findViewById(R.id.btnUp);
        btnDown= findViewById(R.id.btnDown);
        btnLeft= findViewById(R.id.btnLeft);
        btnRight= findViewById(R.id.btnRight);
        btnOK= findViewById(R.id.btnOK);
    }
    private void initButtonAction()
    {
        btnIO.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("pw");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnOff.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("off");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn1.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("1");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn2.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("2");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn3.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("3");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn4.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("4");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn5.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("5");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn6.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("6");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn7.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code =  object.getString("7");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn8.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code =  object.getString("8");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn9.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("9");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btn0.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("0");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnRed.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("r");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnGreen.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("g");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);
            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnYellow.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("y");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnBlue.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("b");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";

                mqttHandler.publish(topic,message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnGuide.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("guide");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnExit.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("exit");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnBack.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON",object.toString());
                ir_code =  object.getString("back");
                Log.d("IRCODE",ir_code);
                message = "{\"data\":{\"macID\":\""+MAC+"\",\"command\":\""+ir_code+"\"}}";
                mqttHandler.publish(topic,message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnMenu.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON", object.toString());
                ir_code = object.getString("menu");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnVolUp.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("vol+");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnVolDown.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("vol-");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnChUp.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("ch+");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnChDown.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("ch-");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnInfo.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                ir_code = object.getString("i");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnUp.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON", object.toString());
                ir_code = object.getString("up");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnDown.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON", object.toString());
                ir_code = object.getString("down");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnLeft.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON", object.toString());
                ir_code = object.getString("left");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
        btnRight.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON", object.toString());
                ir_code = object.getString("right");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });

        btnOK.setOnClickListener(view -> {
            //vibrate when click
            //performHapticFeedback();
            try {
                JSONObject object = new JSONObject(ir_codes);
                Log.d("IRJSON", object.toString());
                ir_code = object.getString("ok");
                Log.d("IRCODE", ir_code);
                message = "{\"data\":{\"macID\":\"" + MAC + "\",\"command\":\"" + ir_code + "\"}}";
                mqttHandler.publish(topic, message);

            } catch (JSONException e) {
                e.printStackTrace();

            }
        });
    }
    private void init() {
        mqttHandler = new MqttHandler();
        mqttHandler.connect(BROKER_URL,CLIENT_ID);
    }
}
